{"0": {
    "doc": "AccountInfoProvider",
    "title": "AccountInfoProvider",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/extra/account-info-provider.html",
    "relUrl": "/docs/chat-configuration/extra/account-info-provider.html"
  },"1": {
    "doc": "AccountInfoProvider",
    "title": "Table of contents",
    "content": ". | Overview | Why do i need to implement . | Set data for chat creation | Notified about chat session data | . | Setting chat session configurations | Ongoing session configurations updates | . ",
    "url": "http://localhost:4000/docs/chat-configuration/extra/account-info-provider.html#table-of-contents",
    "relUrl": "/docs/chat-configuration/extra/account-info-provider.html#table-of-contents"
  },"2": {
    "doc": "AccountInfoProvider",
    "title": "Overview",
    "content": "Provides the hosting app to set chat session data and configurations, for chat creation, and be notified about chat session updates. Implementation should be passed on ChatController creation. val chatController = ChatController.Builder(context) .accountProvider(accountInfoProvider) ...build(account,...) . ",
    "url": "http://localhost:4000/docs/chat-configuration/extra/account-info-provider.html#overview",
    "relUrl": "/docs/chat-configuration/extra/account-info-provider.html#overview"
  },"3": {
    "doc": "AccountInfoProvider",
    "title": "Why do i need to implement",
    "content": ". | Set data for chat creation . To be able to set data and configurations for chat session creation, when escalating from an ai chat. AccountInfoProvider.provide will be called, with a “starting point” Account. This account is configured with the details provided by the chat channel (like: apikey and appId). The App can set whatever is needs for the chat session before it passes the updated account on the callback. class SimpleAccountProvider : AccountInfoProvider { var accounts: MutableMap&lt;String, AccountInfo&gt; = mutableMapOf() override fun provide(account: AccountInfo, callback: Completion&lt;AccountInfo&gt;) { accounts[account.getApiKey()]?.let{ account.getInfo().update(it.getInfo()) // update session related data for the upcoming chat account }?:let{ addAccount(account) } callback.onComplete(account) } } . | Notified about chat session data . To be able to receive account session data updates. like: chatId, SenderId, visitorId, etc. `AccountIfoProvider.update’ will be called with an updated account. The updated values (or the whole account) can be saved for later use. class SimpleAccountProvider : AccountInfoProvider { var accounts: MutableMap&lt;String, AccountInfo&gt; = mutableMapOf() override fun update(account: AccountInfo) { accounts[account.getApiKey()]?.getInfo()?.update(account.getInfo()) } } . | . ",
    "url": "http://localhost:4000/docs/chat-configuration/extra/account-info-provider.html#why-do-i-need-to-implement",
    "relUrl": "/docs/chat-configuration/extra/account-info-provider.html#why-do-i-need-to-implement"
  },"4": {
    "doc": "AccountInfoProvider",
    "title": "Setting chat session configurations",
    "content": "Each account has a SessionInfo property. With this property you can provide extra data (see SessionInfoKeys) and configurations (see SessionInfoConfigKeys), that will be used in chat session creation. Kotlin samples: // set extraData for [Live chat]: boldAccount.info.addExtraData(SessionInfoKeys.FirstName to firstName, SessionInfoKeys.LastName to lastName, SessionInfoKeys.Email to email, SessionInfoKeys.Phone to phoneNumber, ...) // Set live chat session to skip the prechat form: boldAccount.info.skipPrechat = true // set user data for [Messaging chat]: asyncAccount.info.UserInfo = UserInfo(UserId).apply{ firstName = \"firstname\" lastName = \"lastname\" email = \"email\" phoneNumber = \"phone number\" countryAbbrev = “&lt;country&gt;” profilePic = “URL” } // set lastReceievdMessageId for [Messaging chat]: asynAccount.info.LastReceivedMessageId = ID // set SenderId for [Messaging chat]: asynAccount.info.SenderId = ID // set Bot chat welcome message id (override id configured in the Console): botAccount.info.welcomeMessage = articleId //////////////////////////// java samples: boldAccount.getInfo().addExtraData(new Pair(SessionInfoKeys.FirstName,firstName),...) LiveSession.setLanguage(boldAccount.getInfo(), \"fr-FR\") AsyncSession.setUserInfo(asyncAccount.getInfo(), new UserInfo(userId)) . ",
    "url": "http://localhost:4000/docs/chat-configuration/extra/account-info-provider.html#setting-chat-session-configurations",
    "relUrl": "/docs/chat-configuration/extra/account-info-provider.html#setting-chat-session-configurations"
  },"5": {
    "doc": "AccountInfoProvider",
    "title": "Ongoing session configurations updates",
    "content": "Some configurations may get updated while the chat is in progress. As in Messaging chat, `LastReceivedMessageId’ is updated on every agent incoming message. We provide a way for the embedding App, to be notified of these changes and be able to persist the most recent data. Instead of AccountInfoProvider, pass an implementation of AccountSessionListener to the ChatController. Updates of ongoing configuration changes are passed over AccountSessionListener::onConfigUpdate method. // call from SDK example: accountListener?.onConfigUpdate(account, SessionInfoConfigKeys.LastReceivedMessageId, id) . class MySessionListener : AccountSessionListener { ... override fun onConfigUpdate(account: AccountInfo, updateKey: String, updatedValue: Any?) { val savedAccount = ... // fetch the relevant account record savedAccount.info .addConfigurations(updateKey to updatedValue) // update the account record // Or use what ever mechanism you have to save specific account session data ... } } val chatController = ChatController.Builder(context) .accountProvider(mySessionListener) ...build(account,...) . ",
    "url": "http://localhost:4000/docs/chat-configuration/extra/account-info-provider.html#ongoing-session-configurations-updates",
    "relUrl": "/docs/chat-configuration/extra/account-info-provider.html#ongoing-session-configurations-updates"
  },"6": {
    "doc": "Advanced Topics",
    "title": "Advanced Topics",
    "content": " ",
    "url": "http://localhost:4000/docs/advanced-topics/",
    "relUrl": "/docs/advanced-topics/"
  },"7": {
    "doc": "Agent Typing Indication",
    "title": "Agent Typing Indication",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/agent_typing_indication/",
    "relUrl": "/docs/chat-configuration/ui-customization/agent_typing_indication/"
  },"8": {
    "doc": "Agent Typing Indication",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/agent_typing_indication/#table-of-contents",
    "relUrl": "/docs/chat-configuration/ui-customization/agent_typing_indication/#table-of-contents"
  },"9": {
    "doc": "AsyncAccount",
    "title": "AsyncAccount",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/setting-account/async-account",
    "relUrl": "/docs/chat-configuration/setting-account/async-account"
  },"10": {
    "doc": "AsyncAccount",
    "title": "Table of contents",
    "content": ". | Configure chat session . | Configure user info | . | How to . | Start a chat session that will relate to the same user | Get messages that were sent while the user was off. | Continue chat on an open/new chat window | . | Account updates | . Use this account to create messaging chat sessions. val account = AsyncAccount(API_KEY, APPLICATION_ID) . ",
    "url": "http://localhost:4000/docs/chat-configuration/setting-account/async-account#table-of-contents",
    "relUrl": "/docs/chat-configuration/setting-account/async-account#table-of-contents"
  },"11": {
    "doc": "AsyncAccount",
    "title": "Configure chat session",
    "content": "In order to create messaging chat, a valid apiKey and applicationId are required. | applicationId [mandatory] - An id that was created by bold administration to your account. The applicationId can be provided on account creation or later set on the session info property. account.info.applicationId = APPLICATION_ID . | userInfo [optional] - Defines the user that this chat relates to. Uses for relating chat sessions to a specific user, and to provide some user details to be viewed by the chat accepting agent. Configure user info . By default, the account is created with a new UserInfo and an automatically generated userId. | In order to relate chat sessions to a specific user, set a UserInfo object with the specific user, userId value, to the account. account.info.userInfo = UserInfo(USER_ID) . | In order to provide user details, such as first/last name, email etc, you can provide them on your created UserInfo object or access the default created one. | . account.info.userInfo = UserInfo(USER_ID).apply{ firstName = FIRST_NAME // optional lastName = LAST_NAME // optional email = EMAIL_ADDRESS // optional phoneNumber = PHONE_NUMBER // optional } // OR account.info.userInfo.apply{ firstName = \"...\" email = \"...\" ... } . | SenderId [optional] - Chat session id. Should be used to fetch messages that were sent to the user from the agent, on that chat session, while the user was off. | ShouldStartNewChat [optional] - Defines if a previous chat window, on agent workspace, should be used, for this session, if still open. | LastReceivedMessageId [optional] - Defines the last message that was viewed by the user, in order to fetch missed messages from this point on. If not provided, will fetch messages from session start. | . ",
    "url": "http://localhost:4000/docs/chat-configuration/setting-account/async-account#configure-chat-session",
    "relUrl": "/docs/chat-configuration/setting-account/async-account#configure-chat-session"
  },"12": {
    "doc": "AsyncAccount",
    "title": "How to",
    "content": ". | Start a chat session that will relate to the same user . | Get messages that were sent while the user was off. | Configure the session UserInfo with the specific user id. | Configure the SenderId with the id of the session that the messages were sent on. | Configure LastReceivedMessageId with the last agent message that was viewed by the user, in order to get only the relevant messages. The users missed messages will be fetched from the previous session, if has any. | . account.info.apply{ account.info.userInfo = UserInfo(USER_ID) SenderId = PREVIOUS_SESSION_ID LastReceivedMessageId = LAST_AGENT_MESSAGE_ID } . | Continue chat on an open/new chat window . | Configure UserInfo and SenderId and LastReceivedMessageId as mentioned before. | Configure ShouldStartNewChat to false to use an open chat window otherwise set to true | . If the previous session chat was closed by the user or the agent, a new chat window will be created with a new SenderId, no matter what was configured on ShouldStartNewChat. The users missed messages will be fetched from the previous session. account.info.apply{ account.info.userInfo = UserInfo(USER_ID) SenderId = PREVIOUS_SESSION_ID LastReceivedMessageId = LAST_AGENT_MESSAGE_ID ShouldStartNewChat = false/true } . | . ",
    "url": "http://localhost:4000/docs/chat-configuration/setting-account/async-account#how-to",
    "relUrl": "/docs/chat-configuration/setting-account/async-account#how-to"
  },"13": {
    "doc": "AsyncAccount",
    "title": "Account updates",
    "content": ". | Once the chat session was created, an account update will be triggered on your AccountInfoProvider implementation. From the updated account you can fetch the SenderId, and be synced with the last created sesion id. account.info.SenderId . | In order to get updates for LastReceivedMessageId, implement AccountSessionListener instead. | . ",
    "url": "http://localhost:4000/docs/chat-configuration/setting-account/async-account#account-updates",
    "relUrl": "/docs/chat-configuration/setting-account/async-account#account-updates"
  },"14": {
    "doc": "Autocomplete",
    "title": "Autocomplete",
    "content": " ",
    "url": "http://localhost:4000/docs/advanced-topics/autocomplete/",
    "relUrl": "/docs/advanced-topics/autocomplete/"
  },"15": {
    "doc": "Autocomplete",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/advanced-topics/autocomplete/#table-of-contents",
    "relUrl": "/docs/advanced-topics/autocomplete/#table-of-contents"
  },"16": {
    "doc": "BoldAccount",
    "title": "BoldAccount",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/setting-account/bold-account/",
    "relUrl": "/docs/chat-configuration/setting-account/bold-account/"
  },"17": {
    "doc": "BoldAccount",
    "title": "Table of contents",
    "content": ". | Configure chat session | How to | Account updates | . Use this account to create synced live chat sessions with an agent. Configure chat session . Chat session and details can be configured by the account. User details can be provided for the chat session, and will be available for the receiving agent to view. | extraData - Detailes about the user and the current chat session. The extraData details will be used to fill the prechat form if enabled, and will provide the agent some details about the user. | securedInfo - An encrypted secured string that was applied to the specific access key in order to validate the chat origin on creation. | VisitorId - if provided, the created chat will be added to the same user account chats history. The same id will be used on the new chat. | . val account = BoldAccount(API_KEY) account.apply{ // adding extraData: addExtraData (SessionInfoKeys.Department to BOLD_DEPARTMENT, SessionInfoKeys.FirstName to DemoFirstName, SessionInfoKeys.LastName to DemoLastName ...) // adding secured info, in case of validated chats creation: info.securedInfo = \"...\" // Create a chat that relates to an existing user: info.id = VISITOR_ID //OR info.visitorId = VISITOR_ID } . How to . | Define chat branding strings language. account.info.language = \"FR-fr\" . | Define the id of a specific department that should receive the chat. account.info.department = DEPARTMENT_ID . | Create a chat without displaying the prechat form. account.info.skipPrechat = true or account.skipPrechat() . Notice: If the prechat form is being skipped, you can still send user details via extraData. | . Account updates . Once the chat session was created, an account update will be triggered on AccountInfoProvider implementation. From the updated account you can fetch the ChatId. account.info.chatId . ",
    "url": "http://localhost:4000/docs/chat-configuration/setting-account/bold-account/#table-of-contents",
    "relUrl": "/docs/chat-configuration/setting-account/bold-account/#table-of-contents"
  },"18": {
    "doc": "BotAccount",
    "title": "BotAccount",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/setting-account/bot-account",
    "relUrl": "/docs/chat-configuration/setting-account/bot-account"
  },"19": {
    "doc": "BotAccount",
    "title": "Table of contents",
    "content": ". | Creating account | Configure Contexts | Configure Initialization Entities | How to . | Customize and override chat Welcome Message | . | . Use this account to create chat sessions with AI. Creating account . val account = BotAccount(API_KEY, ACCOUNT_NAME, KNOWLEDGE_BASE, SERVER) . | API_KEY - As was configured to your account. | ACCOUNT_NAME [mandatory] - As was configured to your account. | KNOWLEDGE_BASE [mandatory] - The knowledge base you would like this chat to work with. | SERVER [mandatory] - As was configured to your account. | . Configure Contexts . ```kotlin // Create contexts map val contexts = mapOf(\"ContextKey1\" to \"ContextValue1\", \"ContextKey2\" to \"ContextValue2\", ... ) // set on constructor: val account = BotAccount(API_KEY, ACCOUNT_NAME, KNOWLEDGE_BASE, SERVER, contexts) // or later in time, before chat creation: account.contexts = contexts ``` . Configure Initialization Entities . account.initializationEntities = mapOf(\"EntityKey1\" to \"EntityValue1\", \"EntityKey2\" to \"EntityValue2\", ... ) . How to . | Customize and override chat Welcome Message . botAccount.welcomeMessage = ARTICLE_ID // if id is not valid, no message will be displayed botAccount.welcomeMessage = BotAccount.None // prevent welcome message display . | . ",
    "url": "http://localhost:4000/docs/chat-configuration/setting-account/bot-account#table-of-contents",
    "relUrl": "/docs/chat-configuration/setting-account/bot-account#table-of-contents"
  },"20": {
    "doc": "Bot Entities",
    "title": "Chat Entities and Personal information",
    "content": ". The SDK provides the bridge to pass user specific information to the BOT on chat start and while processing responses to user queries, which demands more details from the user, during the chat. There are 2 types of personal information . Initialization entities . Predefined data values that can be provided for the whole chat session and are not being changed dynamically (exp: ids, keys, etc). How To use . | Create the initialization entities map . val entities = mapOf(\"EntityKey1\" to \"EntityValue1\", \"EntityKey2\" to \"EntityValue2\", ... ) . | Set the initialization entities on the account . val account = BotAccount(...).apply { initializationEntities = entities } . | . | Note: The initialization entities can be also supplied at the AccountInfoProvider.provide method as follows: . override fun provide(account: AccountInfo, callback: Completion&lt;AccountInfo&gt;) { ... (account as? BotAccount)?.initializationEntities = hashMapOf(Pair(\"USERID\", \"12345\")) ... } . | . Missing entites and Personal information . Dynamically required details. Depends on user query and the article the Bot responses with. articles of this sort are configured with a Bold360ai provider which formats the response to contain the entities tag pattern, that are being recognized by the SDK as the needed information (please contect out support for farther information about the Bold360AI provider). | Missing entites: Details that the user is asked to provide before the requested data can be supplied. The provider which assigned to the article identifies which extra details are needed in order to get a response to a user query. According to the entities that were set to the account, the App is asked to provide thoes details by calling the EntitiesProvider.provide. Missing entities can be, names, account numbers, etc. | Personal information: Extra user personal info, that may be requested from the App by the SDK regarding a specific entity, in order to provide a response. Needed once the BE provides a response which contains, info needed place holders. The App provided personal info is than used to replace those place holders. Personal information can be, account balance, passport number, etc. | . ## ## . How To use . | Create the missing entities array . val missingEntities = arrayOf(\"EntityKey1\", \"EntityKey2\"... ) . | Set the entities on the account . val account = BotAccount(...).apply { entities = missingEntities } . | Implement the EntitiesProvider interface. At the EntitiesProvider there are two provide methods for personal information and for missing entities. | Pass the implementation of the EntitiesProvider to the ChatController at the ChatController creation . ChatController.Builder(getContext()).entitiesProvider(the EntitiesProvider implemintation)...build(...) . | . Full example: missing entities and personal information usage . ",
    "url": "http://localhost:4000/docs/chat-configuration/extra/bot-entities.html#chat-entities-and-personal-information",
    "relUrl": "/docs/chat-configuration/extra/bot-entities.html#chat-entities-and-personal-information"
  },"21": {
    "doc": "Bot Entities",
    "title": "Bot Entities",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/extra/bot-entities.html",
    "relUrl": "/docs/chat-configuration/extra/bot-entities.html"
  },"22": {
    "doc": "Carousel",
    "title": "Carousel",
    "content": ". ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/carousel/",
    "relUrl": "/docs/chat-configuration/ui-customization/carousel/"
  },"23": {
    "doc": "Chat Availability",
    "title": "Chat Availability",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/tracking-events/chat-availability",
    "relUrl": "/docs/chat-configuration/tracking-events/chat-availability"
  },"24": {
    "doc": "Chat Availability",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/chat-configuration/tracking-events/chat-availability#table-of-contents",
    "relUrl": "/docs/chat-configuration/tracking-events/chat-availability#table-of-contents"
  },"25": {
    "doc": "Chat Bar",
    "title": "Chat Bar",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/chat-bar",
    "relUrl": "/docs/chat-configuration/ui-customization/chat-bar"
  },"26": {
    "doc": "Chat Bar",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/chat-bar#table-of-contents",
    "relUrl": "/docs/chat-configuration/ui-customization/chat-bar#table-of-contents"
  },"27": {
    "doc": "Chat Configuration",
    "title": "Chat configuration",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration#chat-configuration",
    "relUrl": "/docs/chat-configuration#chat-configuration"
  },"28": {
    "doc": "Chat Configuration",
    "title": "Chat Configuration",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration",
    "relUrl": "/docs/chat-configuration"
  },"29": {
    "doc": "Chat Continuity",
    "title": "Chat Continuity",
    "content": " ",
    "url": "http://localhost:4000/docs/advanced-topics/chat-continuity",
    "relUrl": "/docs/advanced-topics/chat-continuity"
  },"30": {
    "doc": "Chat Continuity",
    "title": "Table of contents",
    "content": ". | Chat Session | AccountInfoProvider | Messaging chat continuation | Bold live chat continuation | Bot ai chat continuation | . The option to relate and “continue” chat sessions. ",
    "url": "http://localhost:4000/docs/advanced-topics/chat-continuity#table-of-contents",
    "relUrl": "/docs/advanced-topics/chat-continuity#table-of-contents"
  },"31": {
    "doc": "Chat Continuity",
    "title": "Chat Session",
    "content": "Each chat type (bot, live, Messaging) has its own properties that are being used to enable continuity. Those properties are configurable on the accounts info: SessionInfo property. Listening to session data updates . While the chat is in progress, session data, like ids, may be created or changed. In order to be updated with such changes for later use, implement AccountInfoProvider or AccountSessionListener and pass implementation on ChatController creation. val chatController = ChatController.Builder(context).apply{ accountProvider(MyProvider) } .build(account, ...) . ",
    "url": "http://localhost:4000/docs/advanced-topics/chat-continuity#chat-session",
    "relUrl": "/docs/advanced-topics/chat-continuity#chat-session"
  },"32": {
    "doc": "Chat Lifecycle",
    "title": "Chat Lifecycle",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/tracking-events/chat-lifecycle",
    "relUrl": "/docs/chat-configuration/tracking-events/chat-lifecycle"
  },"33": {
    "doc": "Chat Lifecycle",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/chat-configuration/tracking-events/chat-lifecycle#table-of-contents",
    "relUrl": "/docs/chat-configuration/tracking-events/chat-lifecycle#table-of-contents"
  },"34": {
    "doc": "Chat Restoring",
    "title": "Chat Restoring",
    "content": " ",
    "url": "http://localhost:4000/docs/advanced-topics/chat-restore",
    "relUrl": "/docs/advanced-topics/chat-restore"
  },"35": {
    "doc": "Chat Restoring",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/advanced-topics/chat-restore#table-of-contents",
    "relUrl": "/docs/advanced-topics/chat-restore#table-of-contents"
  },"36": {
    "doc": "Chat Settings",
    "title": "Chat settings",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/chat-settings#chat-settings",
    "relUrl": "/docs/chat-configuration/chat-settings#chat-settings"
  },"37": {
    "doc": "Chat Settings",
    "title": "Table of contents",
    "content": ". | Features Settings | Voice Settings | . ",
    "url": "http://localhost:4000/docs/chat-configuration/chat-settings#table-of-contents",
    "relUrl": "/docs/chat-configuration/chat-settings#table-of-contents"
  },"38": {
    "doc": "Chat Settings",
    "title": "Features Settings",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/chat-settings#features-settings",
    "relUrl": "/docs/chat-configuration/chat-settings#features-settings"
  },"39": {
    "doc": "Chat Settings",
    "title": "Voice Settings",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/chat-settings#voice-settings",
    "relUrl": "/docs/chat-configuration/chat-settings#voice-settings"
  },"40": {
    "doc": "Chat Settings",
    "title": "Chat Settings",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/chat-settings",
    "relUrl": "/docs/chat-configuration/chat-settings"
  },"41": {
    "doc": "Dark Mode",
    "title": "Dark Mode",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/overriding-resources/#dark-mode",
    "relUrl": "/docs/chat-configuration/ui-customization/overriding-resources/#dark-mode"
  },"42": {
    "doc": "Datestamp",
    "title": "Datestamp",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/date_and_time/",
    "relUrl": "/docs/chat-configuration/ui-customization/date_and_time/"
  },"43": {
    "doc": "Datestamp",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/date_and_time/#table-of-contents",
    "relUrl": "/docs/chat-configuration/ui-customization/date_and_time/#table-of-contents"
  },"44": {
    "doc": "Voice Settings",
    "title": "Voice Settings",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/chat-settings/voice-settings/",
    "relUrl": "/docs/chat-configuration/chat-settings/voice-settings/"
  },"45": {
    "doc": "Voice Settings",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/chat-configuration/chat-settings/voice-settings/#table-of-contents",
    "relUrl": "/docs/chat-configuration/chat-settings/voice-settings/#table-of-contents"
  },"46": {
    "doc": "Voice Settings",
    "title": "Voice Settings",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/chat-settings/voice-settings/",
    "relUrl": "/docs/chat-configuration/chat-settings/voice-settings/"
  },"47": {
    "doc": "Voice Settings",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/chat-configuration/chat-settings/voice-settings/#table-of-contents",
    "relUrl": "/docs/chat-configuration/chat-settings/voice-settings/#table-of-contents"
  },"48": {
    "doc": "Events and Notifications",
    "title": "Events and Notifications",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/tracking-events/events-and-notifications",
    "relUrl": "/docs/chat-configuration/tracking-events/events-and-notifications"
  },"49": {
    "doc": "Events and Notifications",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/chat-configuration/tracking-events/events-and-notifications#table-of-contents",
    "relUrl": "/docs/chat-configuration/tracking-events/events-and-notifications#table-of-contents"
  },"50": {
    "doc": "FAQ",
    "title": "FAQ",
    "content": " ",
    "url": "http://localhost:4000/docs/faq/",
    "relUrl": "/docs/faq/"
  },"51": {
    "doc": "Features Settings",
    "title": "Features Settings",
    "content": ". ",
    "url": "http://localhost:4000/docs/chat-configuration/chat-settings/features-settings/",
    "relUrl": "/docs/chat-configuration/chat-settings/features-settings/"
  },"52": {
    "doc": "Feedback",
    "title": "Feedback",
    "content": " ",
    "url": "http://localhost:4000/docs/advanced-topics/feedback/",
    "relUrl": "/docs/advanced-topics/feedback/"
  },"53": {
    "doc": "Feedback",
    "title": "Table of contents",
    "content": ". | Instant Feedback | Timed Feedback | . Instant Feedback . Timed Feedback . ",
    "url": "http://localhost:4000/docs/advanced-topics/feedback/#table-of-contents",
    "relUrl": "/docs/advanced-topics/feedback/#table-of-contents"
  },"54": {
    "doc": "datestamp",
    "title": "datestamp",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/date_and_time/",
    "relUrl": "/docs/chat-configuration/ui-customization/date_and_time/"
  },"55": {
    "doc": "File Upload",
    "title": "File Upload",
    "content": " ",
    "url": "http://localhost:4000/docs/advanced-topics/file-upload",
    "relUrl": "/docs/advanced-topics/file-upload"
  },"56": {
    "doc": "File Upload",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/advanced-topics/file-upload#table-of-contents",
    "relUrl": "/docs/advanced-topics/file-upload#table-of-contents"
  },"57": {
    "doc": "Voice Settings",
    "title": "Voice Settings",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/chat-settings/voice-settings/",
    "relUrl": "/docs/chat-configuration/chat-settings/voice-settings/"
  },"58": {
    "doc": "Voice Settings",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/chat-configuration/chat-settings/voice-settings/#table-of-contents",
    "relUrl": "/docs/chat-configuration/chat-settings/voice-settings/#table-of-contents"
  },"59": {
    "doc": "HandoverAccount",
    "title": "HandoverAccount",
    "content": "Use this account to create chats with third party live chat providers. Usually used for Handover chats. This account is being created automatically by the SDK when chat escalation to Handover chat, was activated on chat with AI. val chatConfig = \"provider defined configuration string\" val account = HandoverAccount(chatConfig) . ",
    "url": "http://localhost:4000/docs/chat-configuration/setting-account/handover-account/",
    "relUrl": "/docs/chat-configuration/setting-account/handover-account/"
  },"60": {
    "doc": "Bot Entities",
    "title": "Handover Chat",
    "content": "Handing the control of the chat to a provided custom HandoverHandler extension. How to activate . Handover chat is automatically being activated, by the SDK, when chat channel configured with custom provider was selected on chat with AI. Do the following for a successful Handover chat escalation. | Create a chat channel in the Bold360ai admin console, configured with custom provider. For more information see: How do I define a channeling policy? . | Set your customed HandoverHandler extension instance to the ChatController. // on ChatController creation: val chatController = ChatController.Builder(context) .chatHandoverHandler(myHandoverHandler) ...build(account,...) // or later: chatController.handoverHandler = myHandoverHandler . | . HandoverHandler extension . | Extend HandoverHandler. | Override ChatHandler methods to achieve your chat logic. Code example: class CustomedHandover(context:Context) : HandoverHnadler(context){ override fun startChat(accountInfo:AccountInfo?) { // create and start your custom chat session. // when created: injectSystemMessage(SystemStatement(\"Handover chat started\"); injectElement(LocalChatElement(\"Hi from handover\", getScope())); } override fun endChat(forceClose: Boolean) { handleEvent(State, StateEvent(StateEvent.Ended, getScope())) enableChatInput(false, null) chatStarted = false } override fun post(message: ChatStatement){ chatDelegate.injectElement(message.apply{ this.status = StatusOk }); // or for later status update use: updateStatus(message.getTimestamp(), StatusOk); } .... } . | . How to . | Inject and update chat elements . HandoverHandler base class provides various methods, like: injectElement, updateElement, storeElement, etc, that can be used while the handover chat is in progress. Base class implementations also make sure elements changes are passed to the ChatElementListener (History updates) . | Display and enable the chat input field . On chat start or/and on state StateEvent.Resumed, your custom handler should enable the chat input field, in order to let the user type messages. This can be done by activating the method enableChatInput. Override this method, if you need to configure different behavior to the field other than the default provided by its super. | Control chat UI components . The HandoverHandler has access to a ChatDelegate implementation, which provides access to the chat fragments UI components, the chat elements and other abilities. #### Exp: Controling AgentTyping UI component visibility state: . // show AgentTyping: chatDelegate?.updateCmp(ComponentType.LiveTypingCmp, data = null) // hide AgentTyping: chatDelegate?.removeCmp(ComponentType.LiveTypingCmp) . | Adding extra details and configurations for chat creation . Handover chat is created by the hosting app. It is provided by a HandoverAccount that may contain some configurations needed for the chat. Before the chat starts, the app will be triggered to provide the account needed for the chat, at this point, details can be added to the the account SessionInfo property. If no extra details are needed, the account should be passed as is. | . ",
    "url": "http://localhost:4000/docs/chat-configuration/extra/handover-chat.html#handover-chat",
    "relUrl": "/docs/chat-configuration/extra/handover-chat.html#handover-chat"
  },"61": {
    "doc": "Bot Entities",
    "title": "Bot Entities",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/extra/handover-chat.html",
    "relUrl": "/docs/chat-configuration/extra/handover-chat.html"
  },"62": {
    "doc": "Handover",
    "title": "Handover",
    "content": " ",
    "url": "http://localhost:4000/docs/advanced-topics/handover",
    "relUrl": "/docs/advanced-topics/handover"
  },"63": {
    "doc": "Handover",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/advanced-topics/handover#table-of-contents",
    "relUrl": "/docs/advanced-topics/handover#table-of-contents"
  },"64": {
    "doc": "Chat History",
    "title": "Chat History",
    "content": " ",
    "url": "http://localhost:4000/docs/advanced-topics/history",
    "relUrl": "/docs/advanced-topics/history"
  },"65": {
    "doc": "Chat History",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/advanced-topics/history#table-of-contents",
    "relUrl": "/docs/advanced-topics/history#table-of-contents"
  },"66": {
    "doc": "How it works",
    "title": "How it works",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/how-it-works/",
    "relUrl": "/docs/chat-configuration/how-it-works/"
  },"67": {
    "doc": "How it works",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/chat-configuration/how-it-works/#table-of-contents",
    "relUrl": "/docs/chat-configuration/how-it-works/#table-of-contents"
  },"68": {
    "doc": "In chat",
    "title": "Autocomplete in chat",
    "content": " ",
    "url": "http://localhost:4000/docs/advanced-topics/autocomplete/in-chat#autocomplete-in-chat",
    "relUrl": "/docs/advanced-topics/autocomplete/in-chat#autocomplete-in-chat"
  },"69": {
    "doc": "In chat",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/advanced-topics/autocomplete/in-chat#table-of-contents",
    "relUrl": "/docs/advanced-topics/autocomplete/in-chat#table-of-contents"
  },"70": {
    "doc": "In chat",
    "title": "In chat",
    "content": " ",
    "url": "http://localhost:4000/docs/advanced-topics/autocomplete/in-chat",
    "relUrl": "/docs/advanced-topics/autocomplete/in-chat"
  },"71": {
    "doc": "Incoming message",
    "title": "Incoming message",
    "content": "Table of content: . | How to customize | Readmore | Message options | Feedback | Carousel | . ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/incoming-message/",
    "relUrl": "/docs/chat-configuration/ui-customization/incoming-message/"
  },"72": {
    "doc": "Incoming message",
    "title": "How to customize",
    "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ultricies nisi vitae congue sollicitudin. Morbi imperdiet non diam vitae vestibulum. Praesent eleifend dapibus ante a vehicula. Integer vel tincidunt odio. Ut fermentum sem hendrerit, tempus risus id, iaculis nisl. Cras vitae pretium metus. Vestibulum odio arcu, egestas vitae diam a, dignissim tempus arcu. Suspendisse accumsan arcu dui, id vulputate tellus congue non. Nam rutrum consectetur erat, vitae convallis massa cursus nec. Morbi sodales, ante non rhoncus tempus, risus ligula pulvinar tortor, eu vestibulum dui diam at neque. Etiam sed dui enim. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc congue iaculis ante, ut ullamcorper leo semper et. ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/incoming-message/#how-to-customize",
    "relUrl": "/docs/chat-configuration/ui-customization/incoming-message/#how-to-customize"
  },"73": {
    "doc": "Incoming message",
    "title": "Readmore",
    "content": "Aliquam erat volutpat. Curabitur magna orci, elementum eu nulla vitae, suscipit accumsan tortor. Sed nec mollis justo, quis volutpat ligula. Fusce turpis arcu, laoreet tincidunt justo in, tempus maximus diam. Donec pretium imperdiet sagittis. Nam risus arcu, semper et arcu quis, maximus ullamcorper tortor. Praesent tristique, tortor eu suscipit interdum, erat sem elementum sapien, id lacinia tortor augue accumsan quam. Fusce mauris ipsum, maximus tincidunt odio sit amet, eleifend ullamcorper purus. Cras tempor velit nulla, id ornare neque consequat sit amet. Define threshold . ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/incoming-message/#readmore",
    "relUrl": "/docs/chat-configuration/ui-customization/incoming-message/#readmore"
  },"74": {
    "doc": "Incoming options",
    "title": "Incoming message options",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/incoming-message/incoming-options#incoming-message-options",
    "relUrl": "/docs/chat-configuration/ui-customization/incoming-message/incoming-options#incoming-message-options"
  },"75": {
    "doc": "Incoming options",
    "title": "Table of contents",
    "content": ". | quick options | channels | persistent options | . ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/incoming-message/incoming-options#table-of-contents",
    "relUrl": "/docs/chat-configuration/ui-customization/incoming-message/incoming-options#table-of-contents"
  },"76": {
    "doc": "Incoming options",
    "title": "quick options",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/incoming-message/incoming-options#quick-options",
    "relUrl": "/docs/chat-configuration/ui-customization/incoming-message/incoming-options#quick-options"
  },"77": {
    "doc": "Incoming options",
    "title": "channels",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/incoming-message/incoming-options#channels",
    "relUrl": "/docs/chat-configuration/ui-customization/incoming-message/incoming-options#channels"
  },"78": {
    "doc": "Incoming options",
    "title": "persistent options",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/incoming-message/incoming-options#persistent-options",
    "relUrl": "/docs/chat-configuration/ui-customization/incoming-message/incoming-options#persistent-options"
  },"79": {
    "doc": "Incoming options",
    "title": "Incoming options",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/incoming-message/incoming-options",
    "relUrl": "/docs/chat-configuration/ui-customization/incoming-message/incoming-options"
  },"80": {
    "doc": "Instant Feedback",
    "title": "Instant Feedback",
    "content": " ",
    "url": "http://localhost:4000/docs/advanced-topics/feedback/instant-feedback",
    "relUrl": "/docs/advanced-topics/feedback/instant-feedback"
  },"81": {
    "doc": "Instant Feedback",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/advanced-topics/feedback/instant-feedback#table-of-contents",
    "relUrl": "/docs/advanced-topics/feedback/instant-feedback#table-of-contents"
  },"82": {
    "doc": "Messages Injection",
    "title": "Messages Injection",
    "content": " ",
    "url": "http://localhost:4000/docs/advanced-topics/messages-injection",
    "relUrl": "/docs/advanced-topics/messages-injection"
  },"83": {
    "doc": "Messages Injection",
    "title": "Table of contents",
    "content": ". | Welcome message | FAQs message | . Welcome message . FAQs message . ",
    "url": "http://localhost:4000/docs/advanced-topics/messages-injection#table-of-contents",
    "relUrl": "/docs/advanced-topics/messages-injection#table-of-contents"
  },"84": {
    "doc": "Messaging Chat",
    "title": "Messaging Chat",
    "content": " ",
    "url": "http://localhost:4000/docs/advanced-topics/messaging-chat",
    "relUrl": "/docs/advanced-topics/messaging-chat"
  },"85": {
    "doc": "Messaging Chat",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/advanced-topics/messaging-chat#table-of-contents",
    "relUrl": "/docs/advanced-topics/messaging-chat#table-of-contents"
  },"86": {
    "doc": "Outgoing message",
    "title": "Outgoing message",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/outgoing-message/",
    "relUrl": "/docs/chat-configuration/ui-customization/outgoing-message/"
  },"87": {
    "doc": "Outgoing message",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/outgoing-message/#table-of-contents",
    "relUrl": "/docs/chat-configuration/ui-customization/outgoing-message/#table-of-contents"
  },"88": {
    "doc": "Overriding Resources",
    "title": "Overriding Resources",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/overriding-resources",
    "relUrl": "/docs/chat-configuration/ui-customization/overriding-resources"
  },"89": {
    "doc": "Overriding Resources",
    "title": "Table of contents",
    "content": ". | Dark Mode | . Proin quis semper mauris. Aliquam risus leo, fringilla eget maximus non, tincidunt nec tellus. Cras ullamcorper sagittis mi, at pharetra ipsum dictum nec. Mauris sodales maximus purus imperdiet sagittis. Fusce aliquet risus venenatis vulputate pretium. Vivamus aliquam vestibulum augue non cursus. Donec porttitor ac eros eget iaculis. Nullam et dolor efficitur, placerat felis ut, semper nunc. Morbi felis sapien, condimentum non tortor eu, tempus tincidunt erat. Mauris efficitur tortor eget nulla blandit, quis consectetur ligula mollis. Fusce ac nibh sed diam tristique tincidunt. Donec eget tortor in nisl fringilla tincidunt. Duis feugiat pharetra augue, ac pretium dolor viverra ut. Pellentesque eros risus, malesuada ornare cursus quis, elementum sed elit. Aenean eget elementum metus, eleifend mattis sem. Nam faucibus volutpat urna et consectetur. Mauris eu malesuada est, et tempus sapien. Aenean ut dui non neque vestibulum aliquet. Sed euismod facilisis dui eget maximus. In aliquet consectetur facilisis. Mauris accumsan, lectus non vulputate facilisis, nisl mi tincidunt enim, vel imperdiet mauris neque at ipsum. Morbi ut lectus semper, consectetur risus rhoncus, pharetra justo. Nunc id porttitor turpis, sed aliquet nisl. Donec sit amet dolor libero. Phasellus quis rutrum risus. Etiam feugiat mauris porta luctus ultrices. In maximus vel tellus vel vestibulum. Curabitur malesuada sollicitudin erat, vitae dapibus magna laoreet egestas. Donec lacinia semper enim, vitae mollis justo. Cras accumsan sapien imperdiet elementum pellentesque. Suspendisse commodo est a nisi vulputate, ut porttitor lacus pellentesque. Donec sit amet dolor libero. Phasellus quis rutrum risus. Etiam feugiat mauris porta luctus ultrices. In maximus vel tellus vel vestibulum. Curabitur malesuada sollicitudin erat, vitae dapibus magna laoreet egestas. Donec lacinia semper enim, vitae mollis justo. Cras accumsan sapien imperdiet elementum pellentesque. Suspendisse commodo est a nisi vulputate, ut porttitor lacus pellentesque. Donec sit amet dolor libero. Phasellus quis rutrum risus. Etiam feugiat mauris porta luctus ultrices. In maximus vel tellus vel vestibulum. Curabitur malesuada sollicitudin erat, vitae dapibus magna laoreet egestas. Donec lacinia semper enim, vitae mollis justo. Cras accumsan sapien imperdiet elementum pellentesque. Suspendisse commodo est a nisi vulputate, ut porttitor lacus pellentesque. Donec sit amet dolor libero. Phasellus quis rutrum risus. Etiam feugiat mauris porta luctus ultrices. In maximus vel tellus vel vestibulum. Curabitur malesuada sollicitudin erat, vitae dapibus magna laoreet egestas. Donec lacinia semper enim, vitae mollis justo. Cras accumsan sapien imperdiet elementum pellentesque. Suspendisse commodo est a nisi vulputate, ut porttitor lacus pellentesque. ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/overriding-resources#table-of-contents",
    "relUrl": "/docs/chat-configuration/ui-customization/overriding-resources#table-of-contents"
  },"90": {
    "doc": "Overriding Resources",
    "title": "Dark Mode",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/overriding-resources#dark-mode",
    "relUrl": "/docs/chat-configuration/ui-customization/overriding-resources#dark-mode"
  },"91": {
    "doc": "Overview",
    "title": "Overview",
    "content": " ",
    "url": "http://localhost:4000/docs/overview.html",
    "relUrl": "/docs/overview.html"
  },"92": {
    "doc": "Overview",
    "title": "Table of contents",
    "content": ". | About | Features . | Intended Audience | . | . ",
    "url": "http://localhost:4000/docs/overview.html#table-of-contents",
    "relUrl": "/docs/overview.html#table-of-contents"
  },"93": {
    "doc": "Overview",
    "title": "About",
    "content": "Bold mobile SDK for android is a native android SDK, intended to be used by Apps which are specific for android devices. Native SDK ensures usability by native applications and benefits from the operating system software features. ",
    "url": "http://localhost:4000/docs/overview.html#about",
    "relUrl": "/docs/overview.html#about"
  },"94": {
    "doc": "Overview",
    "title": "Features",
    "content": "Create and integrate messaging and conversations under you App. Create AI, live agent, messaging and third party chats. Customize your chat look to meet your need. Intended Audience . This guide assumes that you have the necessary android development skills to build and compile advanced applications using Android Studio. If you’re a Bold customer, please contact your Bold Customer Success Manager to help facilitate the use of this component. ",
    "url": "http://localhost:4000/docs/overview.html#features",
    "relUrl": "/docs/overview.html#features"
  },"95": {
    "doc": "Queue Bar",
    "title": "Queue Bar",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/queue-bar",
    "relUrl": "/docs/chat-configuration/ui-customization/queue-bar"
  },"96": {
    "doc": "Queue Bar",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/queue-bar#table-of-contents",
    "relUrl": "/docs/chat-configuration/ui-customization/queue-bar#table-of-contents"
  },"97": {
    "doc": "Quick Start",
    "title": "Quick start",
    "content": " ",
    "url": "http://localhost:4000/docs/quick_start.html#quick-start",
    "relUrl": "/docs/quick_start.html#quick-start"
  },"98": {
    "doc": "Quick Start",
    "title": "Table of contents",
    "content": ". | System Requirements | Set up the SDK on your App. | Create and start a chat . | Create an Account | Create ChatController | Add the chat fragment to your activity. | . | . Use this Quick Start guide to get you up and running with the knowledge of fast integrating chat to your application. ",
    "url": "http://localhost:4000/docs/quick_start.html#table-of-contents",
    "relUrl": "/docs/quick_start.html#table-of-contents"
  },"99": {
    "doc": "Quick Start",
    "title": "System Requirements",
    "content": ". | Java 8 or higher. | Gradle 5.3.6 or higher. | Android Studio. | The SDK supports devices with API level 16 or higher. (since version 3.5.0) | . ",
    "url": "http://localhost:4000/docs/quick_start.html#system-requirements",
    "relUrl": "/docs/quick_start.html#system-requirements"
  },"100": {
    "doc": "Quick Start",
    "title": "Set up the SDK on your App.",
    "content": ". | Import SDK dependencies . Import the SDKs dependencies. Check here for latest SDK version and needed dependencies . | Extra configurations on build.gradle: . Add the following to the android{...} block definition . android { kotlinOptions { freeCompilerArgs = ['-Xjvm-default=compatibility'] jvmTarget = \"1.8\" } //overcome the following error: \"More than one file was found with OS independent path...\" packagingOptions{ pickFirst 'META-INF/atomicfu.kotlin_module' // those may also be needed: pickFirst 'META-INF/main_debug.kotlin_module' pickFirst 'META-INF/main_release.kotlin_module' } } . | . Now you are ready to integrate and create some chats. ",
    "url": "http://localhost:4000/docs/quick_start.html#set-up-the-sdk-on-your-app",
    "relUrl": "/docs/quick_start.html#set-up-the-sdk-on-your-app"
  },"101": {
    "doc": "Quick Start",
    "title": "Create and start a chat",
    "content": "Follow the next steps to create and start a chat. | Create an Account . | Create BotAccount for chat with AI | . | Create BoldAccount for live chat with agent | . | Create AsyncAccount to start a messaging chat | . | Create ChatController . With the ChatController one can create and control multiple chats. The chat type is configured by the Account that is provided on chat creation. val chatController = ChatController.Builder(context) .build(account, ...) ... // start a new chat, using same chatController: chatController.startChat(account) // restore active chat or starts new chat chatController.restoreChat(fragment?, account?) . | Add the chat fragment to your activity. Implement the ChatLoadedListener interface and pass it in the ChatController.Builder build method. Once the chat build succeeded and the fragment is ready to be displayed, onComplete will be called with the fragment on the result. ChatController.Builder(context).build(account, object : ChatLoadedListener { override fun onComplete(result: ChatLoadResponse) { result.error?.run{ // report Chat load failed } ?: run{ // add result.getFragment() to the applications activity. } } }) . | . Notice . Make sure to activate ChatController.destruct(), when the ChatController instance is no longer needed (exp: Chats section in app is being closed or the ChatController instance is being replaced). Destruct will verify resources release (including open sockets and communication channels). Code Sample . bold360ai samples . ",
    "url": "http://localhost:4000/docs/quick_start.html#create-and-start-a-chat",
    "relUrl": "/docs/quick_start.html#create-and-start-a-chat"
  },"102": {
    "doc": "Quick Start",
    "title": "Quick Start",
    "content": " ",
    "url": "http://localhost:4000/docs/quick_start.html",
    "relUrl": "/docs/quick_start.html"
  },"103": {
    "doc": "Release Notes",
    "title": "Release Notes",
    "content": " ",
    "url": "http://localhost:4000/docs/release-notes.html",
    "relUrl": "/docs/release-notes.html"
  },"104": {
    "doc": "Release Notes",
    "title": "Table of contents",
    "content": ". | Version 4.1.1 . | Features . | Validated live chat support | Addition of chat form related resources | . | Fixes | . | Version 4.1.0 . | Features . | Chat elements . | ChatElement | StorableChatElement | ChatElementListener | AgentType | ClearBoldChatSession.Builder | . | Input field | . | Fixes | . | Version 4.0.4 . | Fixes | . | Version 4.0.3 . | Features | Fixes . | Usage of ‘ChatAutocompleteUIConfig.sendUIConfig’ was deprecated. | . | ChatController API | Known issue | . | Version 4.0.2 | Version 4.0.1 . | Bot related | Fixes | . | Version 4.0.0 . | Voice to voice | Messaging chat | TLSv1.2 protocol support . | Improvements | Fixes | Changes and Deprecations | . | . | Version 3.5.6 . | Article full view Fixes . | SDK imports | . | . | Version 3.5.5 . | General Fixes | Bold live chat Fixes . | SDK imports | . | . | Version 3.5.4 . | General Chat related | Bot ai chat related . | SDK imports | . | . | Version 3.5.3 . | General Chat related | Bot ai chat related . | SDK imports | . | . | Version 3.5.2 . | Bold live chat related | Bot ai chat related . | SDK imports | . | . | Version 3.5.1 . | Bold live chat related | Bot ai chat related | Breaking Changes . | SDK imports | . | . | Version 3.5.0 . | SDK imports | . | Version 3.4.0 . | General | Bot related | Bold related . | SDK imports | . | . | Version 3.3.2 . | Bot Chat related . | Bold Chat related . | SDK imports | . | . | Version 3.3.1 . | Bot Chat related . | SDK imports | . | . | Version 3.3.0 . | Bot Chat related | Bold Live Chat related: | General: . | SDK imports | . | . | Version: 3.2.4 . | Bot Chat related: | Bold Live Chat related: | General: . | SDK imports | . | Version: 3.2.3 . | SDK imports | . | Version 3.2.2 . | SDK imports | . | Version 3.2.1 | Version 3.2.0 | . | . | . ",
    "url": "http://localhost:4000/docs/release-notes.html#table-of-contents",
    "relUrl": "/docs/release-notes.html#table-of-contents"
  },"105": {
    "doc": "Release Notes",
    "title": "Version 4.1.1",
    "content": "Features . | Validated live chat support . The SDK now provides the way to pass a secured encrypted data string, using the BoldAccount, for creating a secured validated live chat with agent. | Addition of chat form related resources . In order to enable more flexibility of overriding the chat forms look, we’ve added the following: . | The ability to override the padding size and the margin between, of the chat form fields. R.dimen.form_field_padding and R.dimen.form_fields_gap | A separate resource color for the rating views background, R.color.form_rating_field_background | A style resource for the form fields hint appearance, @style/FormHintTextAppearance | . | . Fixes . | Disabling the chat input field, once all active chats were ended. User can’t continue typing messages. | Fix for chat form fields background override by resource. | Fix for form fields hint color override by resource. | . implementation \"com.bold360ai-sdk.core:sdkcore:4.1.1\" implementation \"com.bold360ai-sdk.conversation:engine:4.1.1\" implementation \"com.bold360ai-sdk.conversation:chatintegration:4.1.1\" implementation \"com.bold360ai-sdk.conversation:ui:4.1.1\" implementation \"com.bold360ai-sdk.core:accessibility:4.1.0\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72\" implementation \"com.google.code.gson:gson:2.8.6\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-411",
    "relUrl": "/docs/release-notes.html#version-411"
  },"106": {
    "doc": "Release Notes",
    "title": "Version 4.1.0",
    "content": "Features . | Chat elements . | Chat elements are uniquely identified by a String typed Id property, instead of their timestamp. timestamp of chat elements is no longer unique. | StorableChatElement was updated accordingly and the method getId() was added. | ChatElementListener: Addition of onUpdate and onRemove methods. | All chat types are supports the Id property usage for identifying and adding messages to the chat. | Chat elements structure was changed, so serialization and deserialization of elements was updated. Backward support of old elements deserialization was integrated in order to prevent current stored chats from being lost. (As long as the storageKey will be provided on the storage fetched elements) | In case of previous stored chats, a migration tool is provided on this version, to convert old scheme elements to the new ones. Follow migrating your chat for more details. | . - Breaking changes and Deprecations: . | ChatElement . | relocated to package: com.nanorep.convesationui.structure.elements** | . | StorableChatElement . | Interface is now located on package: com.nanorep.convesationui.structure.elements | getId() method was added. Returns a unique String identification of the element. | The deprecated method getStorableContent():String was removed | . | ChatElementListener . Deprecated methods: . | onRemove(timestampId: Long) | onUpdate(timestampId: Long, item: StorableChatElement) | . Replacement methods: . | onRemove(id: String) | onUpdate(id: String, item: StorableChatElement) | . | AgentType . | Enum was deprecated. | Deprecated agentType property was removed from chat element classes. | . | ClearBoldChatSession.Builder . | Constructor doesn’t receive a context as parameter. The context should be provided on build method. | . | . | Input field . Scrolling support addition enables content of more than 6 lines. ## . | . Fixes . | Connectivity receiver leak errors | Fix of the crash that happened if malformed Bold API key was provided. Now it fails with an error. | Fix of the crash that was experienced when rotating the device while a chat form was presented. | Fix of crash when changing the device language, mid chat. | Fix of carousel readout crash. | Chat forms: Replacing hard-coded color and dimension values with resources, to enable override and night mode configured replacements by the hosting App | Fix of the issue that if the pre-chat form was canceled, due to activity finish state, the cancellation callback was not triggered, and the chat was not canceled properly. | Fixed the issue that if multiple messages were sent in a fast time frame some messages were not visible in the chat, although they were stored in history and sent properly to the agent. | . implementation \"com.bold360ai-sdk.core:sdkcore:4.1.0\" implementation \"com.bold360ai-sdk.conversation:engine:4.1.0\" implementation \"com.bold360ai-sdk.conversation:chatintegration:4.1.0\" implementation \"com.bold360ai-sdk.conversation:ui:4.1.0\" implementation \"com.bold360ai-sdk.core:accessibility:4.1.0\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72\" implementation \"com.google.code.gson:gson:2.8.6\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-410",
    "relUrl": "/docs/release-notes.html#version-410"
  },"107": {
    "doc": "Release Notes",
    "title": "Version 4.0.4",
    "content": "Fixes . | Numerical strings with length longer than 3 digits are no longer being obfuscated by SDK. | . implementation \"com.bold360ai-sdk.core:sdkcore:4.0.3\" implementation \"com.bold360ai-sdk.conversation:engine:4.0.4\" implementation \"com.bold360ai-sdk.conversation:chatintegration:4.0.1\" implementation \"com.bold360ai-sdk.conversation:ui:4.0.3\" implementation \"com.bold360ai-sdk.core:accessibility:4.0.1\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72\" implementation \"com.google.code.gson:gson:2.8.6\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-404",
    "relUrl": "/docs/release-notes.html#version-404"
  },"108": {
    "doc": "Release Notes",
    "title": "Version 4.0.3",
    "content": "Features . | Hands-free experience is now added to the voice-to-voice mode. When the option is turned on, the microphone is automatically enabled once the answer read out is done. | . Fixes . | Fixed an issue that caused reading out persistent options twice in voice-to-voice mode. | When customizing the chat look and feel, multiple SendUIConfig instances were reachable from the ChatUIProvider. We simplified it to have a single one that is reachable under ChatUIProvider.chatInputUIProvider.sendCmpUIProvider.uiConfig. Usage of ‘ChatAutocompleteUIConfig.sendUIConfig’ was deprecated. | . ChatController API . | ChatLoadedListener can be provided also after ChatController creation, for following chat start/restore operations. | . Known issue . | Ticket typed channel is not supported on devices with API level lower than 19 | . implementation \"com.bold360ai-sdk.core:sdkcore:4.0.3\" implementation \"com.bold360ai-sdk.conversation:engine:4.0.3\" implementation \"com.bold360ai-sdk.conversation:chatintegration:4.0.1\" implementation \"com.bold360ai-sdk.conversation:ui:4.0.3\" implementation \"com.bold360ai-sdk.core:accessibility:4.0.1\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72\" implementation \"com.google.code.gson:gson:2.8.6\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-403",
    "relUrl": "/docs/release-notes.html#version-403"
  },"109": {
    "doc": "Release Notes",
    "title": "Version 4.0.2",
    "content": "Fixed on this version: . | Voice to voice: response readout is activated on voice recorded requests only. | Full article display: Displayed content and title matches opened article, also on postback responses. | Prevent images and video images from being cut, on wide devices resolutions. | . - Deprecations: . | InputViewListener - typingStarted, typingEnded were replaced with inputStarted, inputEnded. | ChatInputData - onSendInput was replaced with onSend | . - Known Issue: . | Duplicate configuration options are available for Send component, but only one is currently effective, and should be used. ChatUIProvider.chatInputUIProvider.uiConfig.sendUIConfig ___ | . implementation \"com.bold360ai-sdk.core:sdkcore:4.0.2\" implementation \"com.bold360ai-sdk.conversation:engine:4.0.2\" implementation \"com.bold360ai-sdk.conversation:chatintegration:4.0.1\" implementation \"com.bold360ai-sdk.conversation:ui:4.0.2\" implementation \"com.bold360ai-sdk.core:accessibility:4.0.1\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72\" implementation \"com.google.code.gson:gson:2.8.6\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-402",
    "relUrl": "/docs/release-notes.html#version-402"
  },"110": {
    "doc": "Release Notes",
    "title": "Version 4.0.1",
    "content": "In this version: . Bot related . | UserId management - The SDK generates a userId via BE API, on Bot chat creation, if one was not provided by the embedding App. In order to identify chats sessions as belong to the same user in the reporting, the same userId should be used. Newly generated userId is available to the embedding App, via AccountInfoProvider.update implementation. ```diff | Breaking Changes ``` . | The Embedding App is responsible to save the userId, once created, and provide it on BotAccount.userId for successive chats creation of the same account. | . | Multi answer design - Bot responses which contains multiple answers of kind inlineChoice, are displayed as persistent options. Meaning the options are not disappears when one is selected. | . Fixes . | Improve SDK allocated resources release. | Fix active links on bot responses, while escalated live chat is in progress. | . implementation \"com.bold360ai-sdk.core:sdkcore:4.0.1\" implementation \"com.bold360ai-sdk.conversation:engine:4.0.1\" implementation \"com.bold360ai-sdk.conversation:chatintegration:4.0.1\" implementation \"com.bold360ai-sdk.conversation:ui:4.0.1\" implementation \"com.bold360ai-sdk.core:accessibility:4.0.1\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72\" implementation \"com.google.code.gson:gson:2.8.6\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-401",
    "relUrl": "/docs/release-notes.html#version-401"
  },"111": {
    "doc": "Release Notes",
    "title": "Version 4.0.0",
    "content": "In this version: . Voice to voice . | An extension feature to the speech recognition, Text to speech, responses to recorded requests can be read to the user. | Configurable TTS engine | Embedding app can alternate the text before it is read to the user. | Voice support level is configurable on ConversationSettings | . Messaging chat . If you are interested of the Messaging capabilities of the Mobile SDK please reach out to your Customer Success Manager . TLSv1.2 protocol support . | SDK supports TLSv1.2 secured connections on lower API level devices (&lt; 21) | . ## . Improvements . | ChatController . | ChatController can now be used to create multiple chats, no need to re-instantiate. | Chats end is generated by one of the chatting parties: user, live-agent, or by the embedding app. Chats are no longer being closed automatically. | New APIs and properties:&lt;/u&gt; . | onChatInterruption - notify the SDK when something was activated on the device that may interrupt the regular chat flow, like incoming/outgoing calls. | destruct - The ChatController instance will clear all its resources and active chats. | wasDestructed - Indicates if ChatController was destructed and can no longer be used. | terminateChat - Ends all current open chats. | endChat - Ends only active open chat. | startChat - start a new chat with account, with the same ChatController instance. | restoreChat - Continue open chat even if the chat UI was removed. Also can be used when the chat fragment is restored by the app, and to start new chats. | HandoverHandler - Handover handler can be set to the ChatController instance at any time. | . | . | . Fixes . | Bot - articles parsing. | Bot - Welcome message request doesn’t increases the engagements and interactions counters. | . Changes and Deprecations . - Breaking Changes . | Handover - Chat elements related events are not passed automatically to the ChatElementListener implementations. Best practice: extend the abstract HandoverHandler class and use its base class injection methods. | SDK doesn’t ends chats automatically anymore. Chat can be ended by user, live agent or the embedding App. ChatController destruction doesn’t ends the chats, only releases their resources. see ChatController new APIs | ErrorCodes definition was relocated to package “com.integration.core.annotations” | DrawablePosition was removed, since it was a duplicate of CompoundDrawableLocation | . - Deprecations . All deprecations replacements and comments are available via javaDoc/KDOC (Android studio quick help) . | Configuring voice support on ConversationSettings and ChatInpuData replaced with VoiceSettings | SessionInfo.update - overrides only properties with the same key (use override method for a complete replacement) | Live session properties, such as, ChatId, Department, applicationId, replaced with the identical properties located on com.integration.core.LiveSession | Elements injection methods on ChatDelegate were deprecated. | ChatInputData.textInputHint replaced with ChatInputData.inputHints | Constructor deprecation on ContentChatElement class hierarchy. | VisitorDataKeys were deprecated and replaced with SessionInfoKeys | ChatbarCmpConfig - drawableLocation  and compoundDrawablesPadding were deprecated and replaced with ChatbarCmpConfig.drawableConfig, which include them both. | . + Known issues . | Bot - Articles with iframe tag for embedded videos, should not contain empty properties, such as allowfullscreen. Every property should have a value set to it. | . implementation \"com.bold360ai-sdk.core:sdkcore:4.0.0\" implementation \"com.bold360ai-sdk.conversation:engine:4.0.0\" implementation \"com.bold360ai-sdk.conversation:chatintegration:4.0.0\" implementation \"com.bold360ai-sdk.conversation:ui:4.0.0\" implementation \"com.bold360ai-sdk.core:accessibility:4.0.0\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72\" implementation \"com.google.code.gson:gson:2.8.6\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-400",
    "relUrl": "/docs/release-notes.html#version-400"
  },"112": {
    "doc": "Release Notes",
    "title": "Version 3.5.6",
    "content": "In this version: . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-356",
    "relUrl": "/docs/release-notes.html#version-356"
  },"113": {
    "doc": "Release Notes",
    "title": "Article full view Fixes",
    "content": ". | Fix of the issue that the Article title was not presented in the full screen mode display of articles | Fix of the issue that articles were truncated for the end users. If an html encoded character was present in an article, the text after the character was not presented. | . SDK imports . implementation \"com.bold360ai-sdk.core:sdkcore:3.5.5\" implementation \"com.bold360ai-sdk.conversation:engine:3.5.6\" implementation \"com.bold360ai-sdk.conversation:chatintegration:3.5.5\" implementation \"com.bold360ai-sdk.conversation:ui:3.5.6\" implementation \"com.bold360ai-sdk.core:accessibility:3.5.0\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.61\" implementation \"com.google.code.gson:gson:2.8.6\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . ",
    "url": "http://localhost:4000/docs/release-notes.html#article-full-view-fixes",
    "relUrl": "/docs/release-notes.html#article-full-view-fixes"
  },"114": {
    "doc": "Release Notes",
    "title": "Version 3.5.5",
    "content": "In this version: . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-355",
    "relUrl": "/docs/release-notes.html#version-355"
  },"115": {
    "doc": "Release Notes",
    "title": "General Fixes",
    "content": ". | Fix of the issue that the placeholder, in the text input, changed when a chat was channeled to a live agent. | . ",
    "url": "http://localhost:4000/docs/release-notes.html#general-fixes",
    "relUrl": "/docs/release-notes.html#general-fixes"
  },"116": {
    "doc": "Release Notes",
    "title": "Bold live chat Fixes",
    "content": ". | Initial questions submitted through the pre-chat form, are visible to the end user, as the first, end user, sent message. | Postchat form submission, returns with no errors. | . SDK imports . implementation \"com.bold360ai-sdk.core:sdkcore:3.5.5\" implementation \"com.bold360ai-sdk.conversation:engine:3.5.5\" implementation \"com.bold360ai-sdk.conversation:chatintegration:3.5.5\" implementation \"com.bold360ai-sdk.conversation:ui:3.5.5\" implementation \"com.bold360ai-sdk.core:accessibility:3.5.0\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.61\" implementation \"com.google.code.gson:gson:2.8.6\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . ",
    "url": "http://localhost:4000/docs/release-notes.html#bold-live-chat-fixes",
    "relUrl": "/docs/release-notes.html#bold-live-chat-fixes"
  },"117": {
    "doc": "Release Notes",
    "title": "Version 3.5.4",
    "content": "In this version: . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-354",
    "relUrl": "/docs/release-notes.html#version-354"
  },"118": {
    "doc": "Release Notes",
    "title": "General Chat related",
    "content": ". | Fix of the issue that HTML encoded special characters (like  ) are not displayed at all. | User messages are sent as typed - Fix of the the issue that the tag was visible for the live agent when the end user added a line break in a message. | Fix of the issue that if you had additional visual customization on system messages the message had double border | . ",
    "url": "http://localhost:4000/docs/release-notes.html#general-chat-related",
    "relUrl": "/docs/release-notes.html#general-chat-related"
  },"119": {
    "doc": "Release Notes",
    "title": "Bot ai chat related",
    "content": ". | Re-enabling the feedback gathering method that is presented with a small delay after showing the bot answer as a separate question from the bot. | When presenting “High value + push chat” value messages, first the answer is presented than than automatic channeling is performed. | Fix of the issue that article links did not open the linked article | . SDK imports . implementation \"com.bold360ai-sdk.core:sdkcore:3.5.4\" implementation \"com.bold360ai-sdk.conversation:engine:3.5.4\" implementation \"com.bold360ai-sdk.conversation:chatintegration:3.5.3\" implementation \"com.bold360ai-sdk.conversation:ui:3.5.4\" implementation \"com.bold360ai-sdk.core:accessibility:3.5.0\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.61\" implementation \"com.google.code.gson:gson:2.8.6\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . ",
    "url": "http://localhost:4000/docs/release-notes.html#bot-ai-chat-related",
    "relUrl": "/docs/release-notes.html#bot-ai-chat-related"
  },"120": {
    "doc": "Release Notes",
    "title": "Version 3.5.3",
    "content": "In this version: . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-353",
    "relUrl": "/docs/release-notes.html#version-353"
  },"121": {
    "doc": "Release Notes",
    "title": "General Chat related",
    "content": ". | Expose an interface to programmatically inject a user query in a conversational bot. Note: This feature was already available, docs have been updated . | . ",
    "url": "http://localhost:4000/docs/release-notes.html#general-chat-related-1",
    "relUrl": "/docs/release-notes.html#general-chat-related-1"
  },"122": {
    "doc": "Release Notes",
    "title": "Bot ai chat related",
    "content": ". | Initialize Entities support | . SDK imports . implementation \"com.bold360ai-sdk.core:sdkcore:3.5.2\" implementation \"com.bold360ai-sdk.conversation:engine:3.5.3\" implementation \"com.bold360ai-sdk.conversation:chatintegration:3.5.2\" implementation \"com.bold360ai-sdk.conversation:ui:3.5.2\" implementation \"com.bold360ai-sdk.core:accessibility:3.5.0\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.60\" implementation \"com.google.code.gson:gson:2.8.5\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . ",
    "url": "http://localhost:4000/docs/release-notes.html#bot-ai-chat-related-1",
    "relUrl": "/docs/release-notes.html#bot-ai-chat-related-1"
  },"123": {
    "doc": "Release Notes",
    "title": "Version 3.5.2",
    "content": "In this version: . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-352",
    "relUrl": "/docs/release-notes.html#version-352"
  },"124": {
    "doc": "Release Notes",
    "title": "Bold live chat related",
    "content": ". | Support “High value + push chat” behavior: Articles that are configured with “High value + push chat” option, are immediatelly escalate to the first Chat channel when recieved. | . ",
    "url": "http://localhost:4000/docs/release-notes.html#bold-live-chat-related",
    "relUrl": "/docs/release-notes.html#bold-live-chat-related"
  },"125": {
    "doc": "Release Notes",
    "title": "Bot ai chat related",
    "content": ". | Added analytics reports for Voice and Autocomplete user’s interactions. | . SDK imports . implementation \"com.bold360ai-sdk.core:sdkcore:3.5.2\" implementation \"com.bold360ai-sdk.conversation:engine:3.5.2\" implementation \"com.bold360ai-sdk.conversation:chatintegration:3.5.2\" implementation \"com.bold360ai-sdk.conversation:ui:3.5.2\" implementation \"com.bold360ai-sdk.core:accessibility:3.5.0\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.60\" implementation \"com.google.code.gson:gson:2.8.5\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . ",
    "url": "http://localhost:4000/docs/release-notes.html#bot-ai-chat-related-2",
    "relUrl": "/docs/release-notes.html#bot-ai-chat-related-2"
  },"126": {
    "doc": "Release Notes",
    "title": "Version 3.5.1",
    "content": "In this version: . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-351",
    "relUrl": "/docs/release-notes.html#version-351"
  },"127": {
    "doc": "Release Notes",
    "title": "Bold live chat related",
    "content": ". | Postchat form, SDKs implementation . | Fixes: . | Upload feature became disabled when upload icon configured as hidden. Important: Upload image visibility configuration chage . | . | . ",
    "url": "http://localhost:4000/docs/release-notes.html#bold-live-chat-related-1",
    "relUrl": "/docs/release-notes.html#bold-live-chat-related-1"
  },"128": {
    "doc": "Release Notes",
    "title": "Bot ai chat related",
    "content": ". | Channels icons as configured in bold360ai console | Hint text for input field as configured in bold360ai console | . ",
    "url": "http://localhost:4000/docs/release-notes.html#bot-ai-chat-related-3",
    "relUrl": "/docs/release-notes.html#bot-ai-chat-related-3"
  },"129": {
    "doc": "Release Notes",
    "title": "Breaking Changes",
    "content": ". | StatementScope.isLive is no longer a function, but a property. | ErrorCodes relocated to package “com.integration.core.annotations” | . ## . SDK imports . implementation \"com.bold360ai-sdk.core:sdkcore:3.5.1\" implementation \"com.bold360ai-sdk.core:accessibility:3.5.0\" implementation \"com.bold360ai-sdk.conversation:engine:3.5.1\" implementation \"com.bold360ai-sdk.conversation:chatintegration:3.5.1\" implementation \"com.bold360ai-sdk.conversation:ui:3.5.1\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.60\" implementation \"com.google.code.gson:gson:2.8.5\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . ",
    "url": "http://localhost:4000/docs/release-notes.html#breaking-changes",
    "relUrl": "/docs/release-notes.html#breaking-changes"
  },"130": {
    "doc": "Release Notes",
    "title": "Version 3.5.0",
    "content": "In this version: . | SDK supports API 16+ ```diff | Known issue: Ticket form is not loaded properly on devices with API &lt; 19 ``` | Fixes: . | While on TalkBack mode, only items with action are described with “double tap to activate..” instruction. -Known issue: While in `TalkBack` mode internal links are not being activated properly. | Improved Carousel items height calculation . | Improved parssing of span tag with style attribute | . | . ## . SDK imports . implementation \"com.bold360ai-sdk.core:sdkcore:3.5.0\" implementation \"com.bold360ai-sdk.core:accessibility:3.5.0\" implementation \"com.bold360ai-sdk.conversation:engine:3.5.0\" implementation \"com.bold360ai-sdk.conversation:chatintegration:3.5.0\" implementation \"com.bold360ai-sdk.conversation:ui:3.5.0\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.50\" implementation \"com.google.code.gson:gson:2.8.5\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-350",
    "relUrl": "/docs/release-notes.html#version-350"
  },"131": {
    "doc": "Release Notes",
    "title": "Version 3.4.0",
    "content": "In this version: . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-340",
    "relUrl": "/docs/release-notes.html#version-340"
  },"132": {
    "doc": "Release Notes",
    "title": "General",
    "content": ". | Autocomplete support - New input field component was introduced. This field supports autocomplete, which is currently available only on Bot chats. ```diff . | Breaking Changes: Input field configurations are now available via ChatInputUIProvider ``` | . | AccountInfo improvements - ```diff . | Breaking Changes on Account class hierarchy. Account.info is now of type SessionInfo. (was ByteArray) Account details such as chatId, visitorId, providerConfig, etc are available via this object. ``` | . | Improving chat restore support . | Deprecated method onAccountUpdate in ChatEventListener Account updates are received by AccountInfoProvider implementation. | . ",
    "url": "http://localhost:4000/docs/release-notes.html#general",
    "relUrl": "/docs/release-notes.html#general"
  },"133": {
    "doc": "Release Notes",
    "title": "Bot related",
    "content": ". | Deprecated - Conversation class BotAccount uses SessionInfo instead (id, holds the last conversationId) | Deprecated method updateAccountInfo in AccountInfoProvider Use update method instead. | Deprecated property lastConversation in BotAccount Use info member instead | Persistent options, incoming element UI customization PersistentOptionsUIProvider supports customization of wrapping bubble element. | Fixes - . | fixes related to feedback and readmore articles | fix for ticket typed channel activation | some UI fixes | . | . ",
    "url": "http://localhost:4000/docs/release-notes.html#bot-related-1",
    "relUrl": "/docs/release-notes.html#bot-related-1"
  },"134": {
    "doc": "Release Notes",
    "title": "Bold related",
    "content": ". | Deprecated - VisitorInfo class BoldAccount uses SessionInfo instead (id, holds the visitorId) | Department availability and Departments list, requests support. Via ChatAvailability | ChatId exposure - chatId is available once a live chat is created and account is updated, via BoldAccount.info member. | Bot chat transcript to live agent - Once a Bot chat is escalated to a live Bold chat, the bot chat content is passed to the live agent. | Live chatbar customization ```diff . | Breaking Changes: . | was ChatBarComponent.ChatBarViewProvider now ChatbarCmpAdapter | Configuration for End component is handled by configEndCmp (was `updateUI) | Configuration for agent details component is handled by configAgentCmp (was updateUI) `` | . | . | Fixes - . | double event raising on upload press | . | . ## . SDK imports . implementation \"com.bold360ai-sdk.core:sdkcore:3.4.0\" implementation \"com.bold360ai-sdk.core:accessibility:3.4.0\" implementation \"com.bold360ai-sdk.conversation:engine:3.4.0\" implementation \"com.bold360ai-sdk.conversation:chatintegration:3.4.0\" implementation \"com.bold360ai-sdk.conversation:ui:3.4.0\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.31\" implementation \"com.google.code.gson:gson:2.8.5\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . ",
    "url": "http://localhost:4000/docs/release-notes.html#bold-related",
    "relUrl": "/docs/release-notes.html#bold-related"
  },"135": {
    "doc": "Release Notes",
    "title": "Version 3.3.2",
    "content": "In this version: . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-332",
    "relUrl": "/docs/release-notes.html#version-332"
  },"136": {
    "doc": "Release Notes",
    "title": "Bot Chat related",
    "content": ". | Fixed an issue with ticket channel activation. | Reopen customize method in ChatUIProvider. | . Bold Chat related . | Fixed an issue that caused the agent’s details to change in the chatbar as the customer was typing. | . SDK imports . implementation \"com.bold360ai-sdk.core:sdkcore:3.3.1\" implementation \"com.bold360ai-sdk.core:accessibility:3.3.1\" implementation \"com.bold360ai-sdk.conversation:engine:3.3.2\" implementation \"com.bold360ai-sdk.conversation:chatintegration:3.3.2\" implementation \"com.bold360ai-sdk.conversation:ui:3.3.2\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.31\" implementation \"com.google.code.gson:gson:2.8.5\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . ",
    "url": "http://localhost:4000/docs/release-notes.html#bot-chat-related",
    "relUrl": "/docs/release-notes.html#bot-chat-related"
  },"137": {
    "doc": "Release Notes",
    "title": "Version 3.3.1",
    "content": "In this version: . Bot Chat related . | Fix for url channel activation. | Fix for empty bubble content. | . - Known issue: Ticket typed channels not working . SDK imports . implementation \"com.bold360ai-sdk.core:sdkcore:3.3.1\" implementation \"com.bold360ai-sdk.conversation:engine:3.3.1\" implementation \"com.bold360ai-sdk.conversation:chatintegration:3.3.1\" implementation \"com.bold360ai-sdk.conversation:ui:3.3.1\" implementation \"com.bold360ai-sdk.core:accessibility:3.3.1\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.31\" implementation \"com.google.code.gson:gson:2.8.5\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-331",
    "relUrl": "/docs/release-notes.html#version-331"
  },"138": {
    "doc": "Release Notes",
    "title": "Version 3.3.0",
    "content": "In this version: . Bot Chat related . | Welcome message customization support by integrating app. | Autocomplete standalone component | . ! Breaking Changes: # BotAccount location: import com.nanorep.nanoengine.bot.BotAccount . Bold Live Chat related: . | Live chatbar: Agent name and avatar display | Chat availability check support. | Live chat language customization by integrating app | . General: . | Chat element changes listening support (import com.nanorep.convesationui.structure.history.ChatElementListener) | . ! Breaking Changes: # HistoryProvider was deprecated and should not be used. Use full implementation of ChatElementListener instead. # ChatUIProvider.customize method became internal and is not accesible for now. Dynamic configurations will be supported in the future. SDK imports . implementation \"com.bold360ai-sdk.core:sdkcore:3.3.0\" implementation \"com.bold360ai-sdk.conversation:engine:3.3.0\" implementation \"com.bold360ai-sdk.conversation:chatintegration:3.3.0\" implementation \"com.bold360ai-sdk.conversation:ui:3.3.0\" implementation \"com.bold360ai-sdk.core:accessibility:3.3.0\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.31\" implementation \"com.google.code.gson:gson:2.8.5\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-330",
    "relUrl": "/docs/release-notes.html#version-330"
  },"139": {
    "doc": "Release Notes",
    "title": "Version: 3.2.4",
    "content": "In this version: . Bot Chat related: . | On load article (welcome message) | Custom user id - overriding default generated id | Handover support -Third party chat support | . Bold Live Chat related: . | Passing user typing indication to agent. agent can now see when the visitor is typing. | Chat bar display while live chat is in progress. Enables end live chat. | File upload, supports working with SDK default upload mechanism and integrating with self implementation. | . General: . | Improve memory usage and images display on different device resolutions. | Improvements in connections establishing and requests posting. | Bugs fixes. | . SDK imports . implementation \"com.bold360ai-sdk.core:sdkcore:3.2.4\" implementation \"com.bold360ai-sdk.conversation:engine:3.2.4\" implementation \"com.bold360ai-sdk.conversation:chatintegration:3.2.4\" implementation \"com.bold360ai-sdk.conversation:ui:3.2.4\" implementation \"com.bold360ai-sdk.core:accessibility:3.2.4\" implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.31\" implementation \"com.google.code.gson:gson:2.8.5\" implementation \"android.arch.lifecycle:extensions:1.1.1\" . Version: 3.2.3 . In this version: . | Bold Chat - Support “Skip prechat” and extra data configurations provided by app side.| https://developer.bold360.com/help/EN/Bold360API/Bold360API/c_sdk_combined_android_adv_present_forms.html . | Bold Chat - Support queue position indication display Queue position UI is both configurable and overridable. https://developer.bold360.com/help/EN/Bold360API/Bold360API/c_sdk_combined_android_adv_chat_queue_position.html . | LifeCycle events - There were added 2 new state events. | InQueue - raised when chat enters the queue | Pending - raised when chat was assigned to an agent but not yet accepted. | . | Base design implementation for “readmore” indication over the bubbles. Support configurations change of the readmore indication. | Full article screen redesign, channels redesign. | . | . SDK imports . implementation \"com.bold360ai-sdk.core:sdkcore:3.2.3\" implementation \"com.bold360ai-sdk.conversation:engine:3.2.3\" implementation \"com.bold360ai-sdk.conversation:chatintegration:3.2.3\" implementation \"com.bold360ai-sdk.conversation:ui:3.2.3\" implementation \"com.bold360ai-sdk.core:accessibility:3.2.2\" . Version 3.2.2 . Release date March 13, 2019 . In this version: . | SDK default UI configurations and customisations upgrade. | Typing indication when bold live agent starts typing. | File upload enabling support. You can now integrate your existing file upload mechanism with the Bold360ai SDK. | Upgrade to Bot V2 API. | Bugs fixes - among them: . | big images in responses, handling, prevents crashes and reduces memory usage. | Bot timed feedback not stopping when live chat starts | outgoing message status indication updates to “ok” only if was passed successfully to an agent. | Adding chat disconnected message when a chat with live agent was disconnected, and can’t be reconnected. | . | . SDK imports . implementation \"com.bold360ai-sdk.core:sdkcore:3.2.2\" implementation \"com.bold360ai-sdk.conversation:engine:3.2.2\" implementation \"com.bold360ai-sdk.conversation:chatintegration:3.2.2\" implementation \"com.bold360ai-sdk.conversation:ui:3.2.2\" implementation \"com.bold360ai-sdk.core:accessibility:3.2.2\" . Version 3.2.1 . Release date: February 21, 2019 . In this version: . | we have some improvements - requests dispatching mechanism was upgraded and improved. | Bugs fixes: app crashes, carousel sizing, some regressions fixes. | We’ve upgraded kotlin coroutines version which is now 1.1.1 . | We’re now using the new gradle import methods,api and implementation . | . implementation \"com.nanorep.core:sdkcore:3.2.1\" implementation \"com.nanorep.conversation:engine:3.2.1\" implementation \"com.nanorep.conversation:chatintegration:3.2.1\" implementation \"com.nanorep.conversation:ui:3.2.1\" implementation \"com.nanorep.core:accessibility:3.2.1\" . Version 3.2.0 . Release date: January 31, 2019 . This release contains the following Bold360 Android SDK Features: . | Bold live chat with agent: . | Identify customers and continuation of chats | Chat forms display. SDK provides default implementation for the preChat form. SDK enables forms override and display by app side. | Localization | . | lifecycle state events and notifications subscription. | Bot chat support: . | Feedback &amp; Escalation on bot responses. | Responses types - Carousel, Options, Channels, videos, etc. | . | . Notice. Current limitations Imports are needed to all of listed below: ```gradle implementation “com.nanorep.conversation:ui:3.2.0” . implementation “com.nanorep.conversation:chatintegration:3.2.0” implementation “com.nanorep.conversation:engine:3.2.0” implementation “com.nanorep.core:sdkcore:3.2.0” implementation “com.nanorep.core:accessibility:3.2.0” implementation “org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.20” implementation “org.jetbrains.anko:anko-commons:0.10.8” . implementation “com.android.support:appcompat-v7:28.0.0” implementation “com.android.support:design:28.0.0” implementation “com.android.support.constraint:constraint-layout:1.1.3” implementation “com.makeramen:roundedimageview:2.3.0” implementation “org.jetbrains.kotlinx:kotlinx-coroutines-android:0.27.0-eap13” implementation “com.google.code.gson:gson:2.8.2” implementation “android.arch.lifecycle:extensions:1.1.1” ``` . ",
    "url": "http://localhost:4000/docs/release-notes.html#version-324",
    "relUrl": "/docs/release-notes.html#version-324"
  },"140": {
    "doc": "Setting Account",
    "title": "Setting Account",
    "content": "The Account type defines the chat that will be created. Account can be one of the following: . | BotAccount | BoldAccount | AsyncAccount | HandoverAccount | . ",
    "url": "http://localhost:4000/docs/chat-configuration/setting-account/",
    "relUrl": "/docs/chat-configuration/setting-account/"
  },"141": {
    "doc": "Standalone",
    "title": "Autocomplete standalone component",
    "content": " ",
    "url": "http://localhost:4000/docs/advanced-topics/autocomplete/standalone#autocomplete-standalone-component",
    "relUrl": "/docs/advanced-topics/autocomplete/standalone#autocomplete-standalone-component"
  },"142": {
    "doc": "Standalone",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/advanced-topics/autocomplete/standalone#table-of-contents",
    "relUrl": "/docs/advanced-topics/autocomplete/standalone#table-of-contents"
  },"143": {
    "doc": "Standalone",
    "title": "Standalone",
    "content": " ",
    "url": "http://localhost:4000/docs/advanced-topics/autocomplete/standalone",
    "relUrl": "/docs/advanced-topics/autocomplete/standalone"
  },"144": {
    "doc": "System Message",
    "title": "System Message",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/system-message",
    "relUrl": "/docs/chat-configuration/ui-customization/system-message"
  },"145": {
    "doc": "System Message",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/system-message#table-of-contents",
    "relUrl": "/docs/chat-configuration/ui-customization/system-message#table-of-contents"
  },"146": {
    "doc": "Timed Feedback",
    "title": "Timed Feedback",
    "content": " ",
    "url": "http://localhost:4000/docs/advanced-topics/feedback/timed-feedback",
    "relUrl": "/docs/advanced-topics/feedback/timed-feedback"
  },"147": {
    "doc": "Timed Feedback",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/advanced-topics/feedback/timed-feedback#table-of-contents",
    "relUrl": "/docs/advanced-topics/feedback/timed-feedback#table-of-contents"
  },"148": {
    "doc": "TLS 1.2",
    "title": "TLS 1.2 support",
    "content": "Transport Layer Security protocol. Android devices can be in one of the following states: . | Device does not have TLS 1.2 installed at all. | Device has TLS 1.2 installed, but not enabled by default. | Device has TLS 1.2 installed and enabled by default. | . Since Bold systems are now under this security protocol, The Bold SDK as well was updated to support it. The Bold SDK enables the TLSv1.2 protocol on lower API (&lt; 21) devices which are usually doesn’t enable this option by default, even if installed. Hosting App should make sure TLS 1.2 is installed on the device. It is up to the embedding App to verify and suggest installation of TLS 1.2 protocol when is not installed on the device. Google play services library, provides an easy way to do that: Using ProviderInstaller.installIfNeeded or ProviderInstaller.installIfNeededAsync . | Check out here for more info on how to install | Watch on our samples | . Notice . | If your App uses android Support Library - make sure you import the appropriate Google play version: com.google.android.gms:play-services-base:16.1.0 | If your App uses androidX libraries, import the latest version. | . ",
    "url": "http://localhost:4000/docs/faq/tls12#tls-12-support",
    "relUrl": "/docs/faq/tls12#tls-12-support"
  },"149": {
    "doc": "TLS 1.2",
    "title": "TLS 1.2",
    "content": " ",
    "url": "http://localhost:4000/docs/faq/tls12",
    "relUrl": "/docs/faq/tls12"
  },"150": {
    "doc": "Tracking Events",
    "title": "Tracking events &amp; states",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/tracking-events/#tracking-events--states",
    "relUrl": "/docs/chat-configuration/tracking-events/#tracking-events--states"
  },"151": {
    "doc": "Tracking Events",
    "title": "Tracking Events",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/tracking-events/",
    "relUrl": "/docs/chat-configuration/tracking-events/"
  },"152": {
    "doc": "UI Customization",
    "title": "UI Customization",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization",
    "relUrl": "/docs/chat-configuration/ui-customization"
  },"153": {
    "doc": "UI Customization",
    "title": "Table of contents",
    "content": ". | How it works | . | How it works | . How it works . ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization#table-of-contents",
    "relUrl": "/docs/chat-configuration/ui-customization#table-of-contents"
  },"154": {
    "doc": "User Input Field",
    "title": "User Input Field",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/user-input-field",
    "relUrl": "/docs/chat-configuration/ui-customization/user-input-field"
  },"155": {
    "doc": "User Input Field",
    "title": "Table of contents",
    "content": ". | customize | override | send button | voice | file upload | autocompelete | . ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/user-input-field#table-of-contents",
    "relUrl": "/docs/chat-configuration/ui-customization/user-input-field#table-of-contents"
  },"156": {
    "doc": "User Input Field",
    "title": "customize",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/user-input-field#customize",
    "relUrl": "/docs/chat-configuration/ui-customization/user-input-field#customize"
  },"157": {
    "doc": "User Input Field",
    "title": "override",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/user-input-field#override",
    "relUrl": "/docs/chat-configuration/ui-customization/user-input-field#override"
  },"158": {
    "doc": "User Input Field",
    "title": "send  button",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/user-input-field#send--button",
    "relUrl": "/docs/chat-configuration/ui-customization/user-input-field#send--button"
  },"159": {
    "doc": "User Input Field",
    "title": "voice",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/user-input-field#voice",
    "relUrl": "/docs/chat-configuration/ui-customization/user-input-field#voice"
  },"160": {
    "doc": "User Input Field",
    "title": "file upload",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/user-input-field#file-upload",
    "relUrl": "/docs/chat-configuration/ui-customization/user-input-field#file-upload"
  },"161": {
    "doc": "User Input Field",
    "title": "autocompelete",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/ui-customization/user-input-field#autocompelete",
    "relUrl": "/docs/chat-configuration/ui-customization/user-input-field#autocompelete"
  },"162": {
    "doc": "User Tracking",
    "title": "User tracking",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/tracking-events/user-tracking#user-tracking",
    "relUrl": "/docs/chat-configuration/tracking-events/user-tracking#user-tracking"
  },"163": {
    "doc": "User Tracking",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/chat-configuration/tracking-events/user-tracking#table-of-contents",
    "relUrl": "/docs/chat-configuration/tracking-events/user-tracking#table-of-contents"
  },"164": {
    "doc": "User Tracking",
    "title": "User Tracking",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/tracking-events/user-tracking",
    "relUrl": "/docs/chat-configuration/tracking-events/user-tracking"
  },"165": {
    "doc": "Voice Settings",
    "title": "Voice Settings",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/chat-settings/voice-settings/",
    "relUrl": "/docs/chat-configuration/chat-settings/voice-settings/"
  },"166": {
    "doc": "Voice Settings",
    "title": "Table of contents",
    "content": ". ",
    "url": "http://localhost:4000/docs/chat-configuration/chat-settings/voice-settings/#table-of-contents",
    "relUrl": "/docs/chat-configuration/chat-settings/voice-settings/#table-of-contents"
  },"167": {
    "doc": "Voice",
    "title": "Voice",
    "content": " ",
    "url": "http://localhost:4000/docs/advanced-topics/voice",
    "relUrl": "/docs/advanced-topics/voice"
  },"168": {
    "doc": "Voice",
    "title": "Table of contents",
    "content": ". | Alternative readout | . Alternative readout . ",
    "url": "http://localhost:4000/docs/advanced-topics/voice#table-of-contents",
    "relUrl": "/docs/advanced-topics/voice#table-of-contents"
  },"169": {
    "doc": "Welcome Message",
    "title": "Welcome Message",
    "content": " ",
    "url": "http://localhost:4000/docs/chat-configuration/extra/welcome-message.html",
    "relUrl": "/docs/chat-configuration/extra/welcome-message.html"
  },"170": {
    "doc": "Welcome Message",
    "title": "Table of contents",
    "content": ". | Overview | How to configure: | How to disable | Related Topics: | . ",
    "url": "http://localhost:4000/docs/chat-configuration/extra/welcome-message.html#table-of-contents",
    "relUrl": "/docs/chat-configuration/extra/welcome-message.html#table-of-contents"
  },"171": {
    "doc": "Welcome Message",
    "title": "Overview",
    "content": "AI chats can be configured to start with a preconfigured article, this will be fetched on chat start, and be displayed as first chat message. The Welcome Message will appear only once on chat start. If the chat is a continuance chat and has messages history, the Welcome Message will not be reloaded. Welcome Message article can have images, persistent options, carousel, channels, etc. Quick options and channeling of the Welcome Message will be accessible until first user query/action. ",
    "url": "http://localhost:4000/docs/chat-configuration/extra/welcome-message.html#overview",
    "relUrl": "/docs/chat-configuration/extra/welcome-message.html#overview"
  },"172": {
    "doc": "Welcome Message",
    "title": "How to configure:",
    "content": ". | Configure on bold360ai admin console | . Configured Welcome Message id is available on the cnf API response labled as onloadQuestionId. | Configure on chat account Welcome Message, article id, can be configured on the BotAccount. BotAccount(...).apply{ welcomeMessage = WELCOME_MESSAGE_ID } . | . | Welcome Message configuration on BotAccount has presidency over console configuration. | If welcome message id was set to an invalid/non-existing article id, no welcome message will be displayed, error will be passed to ChatEventListener.onError. | . ",
    "url": "http://localhost:4000/docs/chat-configuration/extra/welcome-message.html#how-to-configure",
    "relUrl": "/docs/chat-configuration/extra/welcome-message.html#how-to-configure"
  },"173": {
    "doc": "Welcome Message",
    "title": "How to disable",
    "content": "In order to prevent the Welcome Message display, no matter if configured on the console, set the welcome message id to BotAccount.None. Setting welcome message id to null, will not be effective, as if was not configured on the account. BotAccount(...).apply{ welcomeMessage = BotAccount.None } . ",
    "url": "http://localhost:4000/docs/chat-configuration/extra/welcome-message.html#how-to-disable",
    "relUrl": "/docs/chat-configuration/extra/welcome-message.html#how-to-disable"
  },"174": {
    "doc": "Welcome Message",
    "title": "Related Topics:",
    "content": ". | FAQs message | . ",
    "url": "http://localhost:4000/docs/chat-configuration/extra/welcome-message.html#related-topics",
    "relUrl": "/docs/chat-configuration/extra/welcome-message.html#related-topics"
  }
}
